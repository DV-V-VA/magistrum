#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã JSON —Ñ–∞–π–ª–æ–≤ –≥–µ–Ω–æ–≤
"""

import json
import os
import glob
from pathlib import Path

GENES_DATA_PATH = "/srv/data/202510221102_complete_genes"

def check_genes_structure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã JSON —Ñ–∞–π–ª–æ–≤ –≥–µ–Ω–æ–≤"""
    
    if not os.path.exists(GENES_DATA_PATH):
        print(f"‚ùå –ü–∞–ø–∫–∞ {GENES_DATA_PATH} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        return
    
    json_files = glob.glob(os.path.join(GENES_DATA_PATH, "*.json"))
    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ {len(json_files)} JSON —Ñ–∞–π–ª–æ–≤")
    
    if not json_files:
        print("‚ùå –ù–µ—Ç JSON —Ñ–∞–π–ª–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤
    sample_files = json_files[:5]  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ñ–∞–π–ª–æ–≤
    
    for file_path in sample_files:
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞: {os.path.basename(file_path)}")
        
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                gene_data = json.load(f)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            symbol = gene_data.get('symbol')
            hgnc_name = gene_data.get('hgnc_name')
            llm_summary = gene_data.get('llm_summary')
            
            print(f"   ‚úì Symbol: {symbol}")
            print(f"   ‚úì HGNC Name: {hgnc_name}")
            print(f"   ‚úì LLM Summary: {'–ï—Å—Ç—å' if llm_summary else '–ù–µ—Ç'}")
            print(f"   ‚úì Orthologs: {len(gene_data.get('orthologs', []))}")
            print(f"   ‚úì Gene IDs: {len(gene_data.get('gene_ids', []))}")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –≥–µ–Ω–æ–≤
    test_genes = ['TP53', 'BRCA1', 'NFE2L2', 'EGFR']
    print(f"\nüîé –ü–æ–∏—Å–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –≥–µ–Ω–æ–≤:")
    
    for gene in test_genes:
        file_path = os.path.join(GENES_DATA_PATH, f"{gene}.json")
        exists = os.path.exists(file_path)
        print(f"   {gene}: {'‚úÖ –ù–∞–π–¥–µ–Ω' if exists else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}")

if __name__ == "__main__":
    check_genes_structure()